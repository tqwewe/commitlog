syntax = "proto3";

package eventstore;

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";

message Event {
    uint64 id = 1;
    string stream_id = 2;
    uint64 stream_version = 3;
    string event_name = 4;
    bytes event_data = 5;
    bytes metadata = 6;
    google.protobuf.Timestamp timestamp = 7;
}

message NewEvent {
    string event_name = 1;
    bytes event_data = 2;
    bytes metadata = 3;
}

message AppendEventsRequest {
    string stream_id = 1;
    ExpectedVersion expected_version = 2;
    repeated NewEvent events = 3;
}

message SubscribeRequest {
    string subscriber_id = 1;
    optional uint64 start_from_global_id = 2;
}

message EventBatch {
    repeated Event events = 1;
}

message AcknowledgeRequest {
    string subscriber_id = 1;
    uint64 last_event_id = 2;
}

message ExpectedVersion {
    oneof version {
        Any any = 1;
        StreamExists stream_exists = 2;
        NoStream no_stream = 3;
        Exact exact = 4;
    }
}

message Any {}

message StreamExists {}

message NoStream {}

message Exact {
    uint64 value = 1;
}

service EventStore {
    rpc AppendEvents(AppendEventsRequest) returns (google.protobuf.Empty);

    rpc Subscribe(SubscribeRequest) returns (stream EventBatch);
    
    rpc Acknowledge(AcknowledgeRequest) returns (google.protobuf.Empty);
}
